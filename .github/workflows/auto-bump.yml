name: Auto Bump Formula

on:
  schedule:
    - cron: '0 6 * * *' # daily
  workflow_dispatch:
    inputs:
      formula:
        description: 'Formula name to bump (optional). Leave empty to bump all/livechecked)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: Ensure Homebrew up-to-date
        run: |
          brew update-reset || brew update
      - name: Tap repository
        run: |
          brew untap "${{ github.repository }}" || true
          brew tap "${{ github.repository }}"
      - name: Compute formula list
        id: formulas
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.formula }}" ]; then
            echo "formulae=${{ github.event.inputs.formula }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          FILES=$(ls Formula/*.rb 2>/dev/null || true)
          NAMES=$(for f in $FILES; do basename "$f" .rb; done | sort -u)
          if [ -z "$NAMES" ]; then
            echo "formulae=pretty-git" >> "$GITHUB_OUTPUT"
          else
            echo "formulae=$NAMES" >> "$GITHUB_OUTPUT"
          fi
      - name: Livecheck (newer only)
        run: |
          for f in ${{ steps.formulas.outputs.formulae }}; do
            echo "=== Livecheck $f ==="
            brew livecheck --newer-only --quiet "$f" || true
          done
      - name: Bump as needed
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
        run: |
          set -euxo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Ensure pushes use PAT with repo scope (avoid malformed auth URL)
          git remote set-url origin "https://x-access-token:${HOMEBREW_GITHUB_API_TOKEN}@github.com/${{ github.repository }}.git"
          brew install jq || true
          for f in ${{ steps.formulas.outputs.formulae }}; do
            echo "=== Determine latest version for $f ==="
            NEW_VERSION=$(brew livecheck --json "$f" | tee /dev/stderr | jq -r '.[0].versions.latest // empty')
            if [ -z "$NEW_VERSION" ]; then
              echo "Livecheck returned empty. Falling back to RubyGems API..."
              # Try RubyGems API: https://rubygems.org/api/v1/gems/<name>.json
              NEW_VERSION=$(curl -fsSL "https://rubygems.org/api/v1/gems/${f}.json" | jq -r '.version // empty' || true)
              echo "RubyGems API latest for ${f}: ${NEW_VERSION:-<empty>}"
            fi
            # Determine current version from brew info
            CURRENT_VERSION=$(brew info --json=v2 "$f" | jq -r '.formulae[0].versions.stable // empty')
            echo "Current=$CURRENT_VERSION, Latest=$NEW_VERSION"
            if [ -z "$NEW_VERSION" ]; then
              echo "No newer version found for $f; skipping."; continue;
            fi
            if [ "$NEW_VERSION" = "$CURRENT_VERSION" ]; then
              echo "Already at latest for $f; skipping."; continue;
            fi
            NEW_URL="https://rubygems.org/downloads/${f}-${NEW_VERSION}.gem"
            echo "Compute SHA256 for $NEW_URL"
            NEW_SHA=$(curl -fsSL "$NEW_URL" | shasum -a 256 | awk '{print $1}')
            echo "NEW_SHA=$NEW_SHA"
            BRANCH="bump-$f-$NEW_VERSION"
            echo "=== Prepare branch $BRANCH ==="
            git checkout -b "$BRANCH"

            echo "=== Precise in-file bump (url+sha256) ==="
            FORMULA_PATH="Formula/${f}.rb"
            cp "$FORMULA_PATH" "${FORMULA_PATH}.bak"
            ruby scripts/bump_main_url_sha.rb "$FORMULA_PATH" "$NEW_URL" "$NEW_SHA"
            if ! git diff --exit-code -- "$FORMULA_PATH" >/dev/null; then
              git add "$FORMULA_PATH"
              git commit -m "$f: bump to $NEW_VERSION (url+sha256 only)"
            else
              echo "No changes after precise edit; skipping commit."
            fi

            echo "=== Preflight safety checks ==="
            # 1) Only one formula file modified
            CHANGED_FILES=$(git show --name-only --pretty=format: | sed '/^$/d' | wc -l | tr -d ' ')
            if [ "$CHANGED_FILES" != "1" ]; then
              echo "Unexpected number of changed files: $CHANGED_FILES"; git show --name-only --pretty=format:; exit 1; fi
            # 2) No edits to livecheck/resource blocks in diff
            if git diff --unified=0 HEAD~1..HEAD -- Formula | grep -E '^[+-].*(livecheck|resource|strategy\s*:rubygems)'; then
              echo "Guard: detected changes to livecheck/resource; aborting."; git diff HEAD~1..HEAD -- Formula; exit 1; fi
            # 3) Ensure resource URLs remain pinned to csv-3.3.5 and rexml-3.4.1 in resulting file
            FORMULA_PATH=$(git show --name-only --pretty=format: | head -n1)
            if ! grep -q 'resource "csv"' "$FORMULA_PATH" || ! grep -q 'downloads/csv-3.3.5.gem' "$FORMULA_PATH"; then
              echo "Guard: csv resource URL/version changed"; exit 1; fi
            if ! grep -q 'resource "rexml"' "$FORMULA_PATH" || ! grep -q 'downloads/rexml-3.4.1.gem' "$FORMULA_PATH"; then
              echo "Guard: rexml resource URL/version changed"; exit 1; fi
            # 4) Ensure livecheck URL is RubyGems page (not download)
            if ! grep -q 'livecheck do' "$FORMULA_PATH" || ! grep -q 'url \"https://rubygems.org/gems/pretty-git\"' "$FORMULA_PATH"; then
              echo "Guard: livecheck URL changed"; exit 1; fi
            # 5) Ensure no empty sha256 strings exist
            if grep -q 'sha256 \"\"' "$FORMULA_PATH"; then
              echo "Guard: empty sha256 detected"; exit 1; fi

            echo "=== Push branch and open PR ==="
            git push -u origin "$BRANCH"
            PR_TITLE="$f: update to $NEW_VERSION"
            PR_BODY="Automated bump via workflow.\n\nThis PR updates only the main gem URL and sha256.\nGuard checks ensure livecheck/resources remain unchanged."
            DATA_JSON=$(jq -n --arg title "$PR_TITLE" --arg head "$BRANCH" --arg base "main" --arg body "$PR_BODY" '{title:$title, head:$head, base:$base, body:$body}')
            curl -fsS -X POST \
              -H "Authorization: token ${HOMEBREW_GITHUB_API_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -d "$DATA_JSON" \
              "https://api.github.com/repos/${{ github.repository }}/pulls" \
              | tee /dev/stderr | jq -r '.html_url // empty'
          done
