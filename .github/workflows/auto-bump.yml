name: Auto Bump Formula

on:
  schedule:
    - cron: '0 6 * * *' # daily
  workflow_dispatch:
    inputs:
      formula:
        description: 'Formula name to bump (optional). Leave empty to bump all/livechecked)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: Ensure Homebrew up-to-date
        run: |
          brew update-reset || brew update
      - name: Tap repository
        run: |
          brew untap "${{ github.repository }}" || true
          brew tap "${{ github.repository }}"
      - name: Compute formula list
        id: formulas
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.formula }}" ]; then
            echo "formulae=${{ github.event.inputs.formula }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          FILES=$(ls Formula/*.rb 2>/dev/null || true)
          NAMES=$(for f in $FILES; do basename "$f" .rb; done | sort -u)
          if [ -z "$NAMES" ]; then
            echo "formulae=pretty-git" >> "$GITHUB_OUTPUT"
          else
            echo "formulae=$NAMES" >> "$GITHUB_OUTPUT"
          fi
      - name: Livecheck (newer only)
        run: |
          for f in ${{ steps.formulas.outputs.formulae }}; do
            echo "=== Livecheck $f ==="
            brew livecheck --newer-only --quiet "$f" || true
          done
      - name: Bump as needed
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
        run: |
          set -euxo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Ensure pushes use PAT with repo scope (avoid malformed auth URL)
          git remote set-url origin "https://x-access-token:${HOMEBREW_GITHUB_API_TOKEN}@github.com/${{ github.repository }}.git"
          brew install jq || true
          for f in ${{ steps.formulas.outputs.formulae }}; do
            echo "=== Determine latest version for $f ==="
            NEW_VERSION=$(brew livecheck --json "$f" | tee /dev/stderr | jq -r '.[0].versions.latest // empty')
            if [ -z "$NEW_VERSION" ]; then
              echo "Livecheck returned empty. Falling back to RubyGems API..."
              # Try RubyGems API: https://rubygems.org/api/v1/gems/<name>.json
              NEW_VERSION=$(curl -fsSL "https://rubygems.org/api/v1/gems/${f}.json" | jq -r '.version // empty' || true)
              echo "RubyGems API latest for ${f}: ${NEW_VERSION:-<empty>}"
            fi
            # Determine current version from brew info
            CURRENT_VERSION=$(brew info --json=v2 "$f" | jq -r '.formulae[0].versions.stable // empty')
            echo "Current=$CURRENT_VERSION, Latest=$NEW_VERSION"
            if [ -z "$NEW_VERSION" ]; then
              echo "No newer version found for $f; skipping."; continue;
            fi
            if [ "$NEW_VERSION" = "$CURRENT_VERSION" ]; then
              echo "Already at latest for $f; skipping."; continue;
            fi
            NEW_URL="https://rubygems.org/downloads/${f}-${NEW_VERSION}.gem"
            echo "Compute SHA256 for $NEW_URL"
            NEW_SHA=$(curl -fsSL "$NEW_URL" | shasum -a 256 | awk '{print $1}')
            echo "NEW_SHA=$NEW_SHA"
            echo "=== Bump $f to $NEW_VERSION (url+sha256) ==="
            brew bump-formula-pr \
              --no-browse \
              --strict \
              --online \
              --no-fork \
              --url="$NEW_URL" \
              --sha256="$NEW_SHA" \
              "$f" || echo "No bump needed for $f";
          done
