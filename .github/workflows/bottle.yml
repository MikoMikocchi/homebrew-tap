name: Build Bottles

on:
  workflow_dispatch:
    inputs:
      formula:
        description: 'Formula name(s) to bottle (space-separated). Leave empty to bottle all formulas.'
        required: false
  workflow_run:
    workflows: ["Auto Bump Formula"]
    types: [completed]
  push:
    branches: [ main, master ]
    paths:
      - 'Formula/*.rb'

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: ${{ github.event_name != 'workflow_run' || (github.event.workflow_run.conclusion == 'success') }}
    strategy:
      fail-fast: false
      matrix:
        runner: [macos-latest, macos-13]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v5

      - name: Ensure Homebrew up-to-date
        run: |
          brew update-reset || brew update

      - name: Tap repository
        run: |
          brew untap "${{ github.repository }}" || true
          brew tap "${{ github.repository }}"

      - name: Compute formula list
        id: formulas
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.formula }}" ]; then
            echo "formulae=${{ github.event.inputs.formula }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          FILES=$(ls Formula/*.rb 2>/dev/null || true)
          NAMES=$(for f in $FILES; do basename "$f" .rb; done | sort -u)
          if [ -z "$NAMES" ]; then
            echo "formulae=pretty-git" >> "$GITHUB_OUTPUT"
          else
            echo "formulae=$NAMES" >> "$GITHUB_OUTPUT"
          fi

      - name: Build bottles
        run: |
          set -euxo pipefail
          mkdir -p bottles
          for f in ${{ steps.formulas.outputs.formulae }}; do
            echo "Building bottle for $f on $(uname -m)"
            brew install --build-bottle --formula "$f"
            brew bottle --json --no-rebuild "$f"
            mv ./*.tar.gz ./*.json bottles/ || true
          done

      - name: Upload bottle artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bottles-${{ matrix.runner }}
          path: bottles/*

  merge-and-pr:
    needs: build
    if: ${{ github.event_name != 'workflow_run' || (github.event.workflow_run.conclusion == 'success') }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Ensure Homebrew up-to-date
        run: |
          brew update-reset || brew update

      - name: Compute release tag
        id: meta
        run: |
          echo "tag=bottles-$(date +%Y%m%d-%H%M%S)" >> "$GITHUB_OUTPUT"

      - name: Download all bottle artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: bottles-*
          merge-multiple: true
          path: bottles

      - name: Create draft release with bottles
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.tag }}
          draft: true
          files: |
            bottles/*.tar.gz
            bottles/*.json

      - name: Tap repository
        run: |
          brew untap "${{ github.repository }}" || true
          brew tap "${{ github.repository }}"

      - name: Merge bottle JSON into formulae
        run: |
          set -euxo pipefail
          # Merge will write bottle blocks into formula files
          brew bottle --merge --write --no-commit \
            --root-url="https://github.com/${{ github.repository }}/releases/download/${{ steps.meta.outputs.tag }}" \
            bottles/*.json

      - name: Create PR with bottle blocks
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: add bottle blocks for ${{ steps.meta.outputs.tag }}"
          title: "Add bottles (${{ steps.meta.outputs.tag }})"
          body: |
            This PR adds bottle blocks generated for:
            - Runner(s): macOS arm64 (latest) and macOS Intel (13)

            Release tag: `${{ steps.meta.outputs.tag }}`
          branch: bottle/${{ steps.meta.outputs.tag }}
          add-paths: |
            Formula/*.rb
